on:
  push:
    branches:
    - master
  pull_request:
    branches: [ master ]
jobs:
  MainWindows:
    runs-on: vs2017-win2016
    env:
      PIP_CACHE_DIR: ${{ env.Pipeline.Workspace }}/.pip
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        key: python | "${{ runner.os }} 2" | setup.py
        restore-keys: 
          python | "${{ runner.os }}"
          python
        path: ${{ env.PIP_CACHE_DIR }}
    - name: Cache binary dependencies
      uses: actions/cache@v2
      with:
        key: '"bindep 2020-08-22" | "${{ runner.os }}"'
        restore-keys: 
          "bindep 2020-08-22"
        path: bindep
    - name: gen_pkg fingerprint
      run: ./gen_pkg.sh --gen-fingerprint
      shell: bash
    - name: Cache gen_pkg
      uses: actions/cache@v2
      with:
        key: az-cache | az-cache-fingerprint.list
        restore-keys: 
          az-cache
        path: az_cache
    - name: Download Binary Dependencies
      run: curl https://iwalton.com/ushare/mpv-shim-deps.7z > mpv-shim-deps.7z
      shell: bash
      if: (variables.CACHE_RESTORED != 'true')
    - name: Extract Binary Dependencies
      shell: bash
      run: '"/c/Program Files/7-Zip/7z.exe" x mpv-shim-deps.7z -obindep'
      if: (variables.CACHE_RESTORED != 'true')
    - name: Copy Binary Dependencies
      run: Copy 'bindep/**' '.'
    - name: PIP Dependencies
      run: pip install .[all] pywebview[cef]==3.3.3 pywin32
    - name: Pydantic w/o CYTHON
      run: 'pip uninstall -y pydantic; SKIP_CYTHON=1 pip install --force-reinstall --ignore-installed --no-binary :all: pydantic==0.32'
      shell: bash
    - name: PyInstaller Bootloader
      run: AZ_CACHE=az_cache ./gen_pkg.sh --get-pyinstaller; cd pyinstaller/bootloader; python ./waf distclean all; cd ..; python setup.py install
      shell: bash
    - name: gen_pkg (Languages & Subrepos)
      run: AZ_CACHE=az_cache ./gen_pkg.sh --skip-build
      shell: bash
    - name: Main Build
      run: build-win.bat
    - name: Main Artifact Rename
      run: ./artifacts.sh standard
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        path: publish/Shim
        name: ShimPortable
    - uses: actions/upload-artifact@v2
      with:
        path: publish/DesktopInstaller
        name: DesktopInstaller
  LegacyWindows:
    runs-on: vs2017-win2016
    env:
      PIP_CACHE_DIR: ${{ env.Pipeline.Workspace }}/.pip
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        key: python | "${{ runner.os }} 2" | setup.py
        restore-keys: 
          python | "${{ runner.os }}"
          python
        path: ${{ env.PIP_CACHE_DIR }}
    - name: Cache binary dependencies
      uses: actions/cache@v2
      with:
        key: '"bindep 2020-08-22" | "${{ runner.os }}"'
        restore-keys: 
          "bindep 2020-08-22"
        path: bindep
    - name: gen_pkg fingerprint
      run: ./gen_pkg.sh --gen-fingerprint
      shell: bash
    - name: Cache gen_pkg
      uses: actions/cache@v2
      with:
        key: az-cache | az-cache-fingerprint.list
        restore-keys: 
          az-cache
        path: az_cache
    - name: Download Binary Dependencies
      run: curl https://iwalton.com/ushare/mpv-shim-deps.7z > mpv-shim-deps.7z
      shell: bash
      if: (variables.CACHE_RESTORED != 'true')
    - name: Extract Binary Dependencies
      shell: bash
      run: '"/c/Program Files/7-Zip/7z.exe" x mpv-shim-deps.7z -obindep'
      if: (variables.CACHE_RESTORED != 'true')
    - name: Copy Binary Dependencies
      run: Copy 'bindep/**' '.'
    - name: PIP Dependencies x86
      run: pip install .[all] pywebview[cef]==3.3.3 pywin32
    - name: Pydantic w/o CYTHON x86
      run: 'pip uninstall -y pydantic; SKIP_CYTHON=1 pip install --force-reinstall --ignore-installed --no-binary :all: pydantic==0.32'
      shell: bash
    - name: PyInstaller Bootloader x86
      run: AZ_CACHE=az_cache ./gen_pkg.sh --get-pyinstaller; cd pyinstaller/bootloader; python ./waf distclean all; cd ..; python setup.py install
      shell: bash
    - name: gen_pkg (Languages & Subrepos)
      run: AZ_CACHE=az_cache ./gen_pkg.sh --skip-build
      shell: bash
    - name: Legacy Build
      run: build-win-32.bat
    - name: Legacy Artifact Rename
      run: ./artifacts.sh legacy
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        path: publish/DesktopInstallerLegacy
        name: DesktopInstallerLegacy
